Script started on Mon Nov  7 20:32:40 2016
[?1034hbash-3.2$ cat README.MD Maze.h Maze.cpp driver.cpp 
Jackson Brietzke
Professor Papadakis
11/7/16
Bonus Recursion Lab

This program either uses a default maze or a custom maze and takes in
a starting point and tells the users whether they can reach the exit.
#ifndef MAZE_H
#define MAZE_H
using namespace std;
class Maze
{
public:
   Maze();
   ~Maze();
   void display();
   void createBoard(string);
   bool isPath(int, int);
private:
   static const int thisManyRows = 4;
   static const int thisManyCols = 5;
   char mazeBoard[thisManyRows][thisManyCols];
};

#endif
#include <iostream>
#include <fstream>
#include "Maze.h"
using namespace std;

Maze::Maze()
{
   cout << "Constructor\n";
}

Maze::~Maze()
{
   cout << "Destructor\n";
}

void Maze::display()
{
   cout << "This is what the Board looks like\n";
   for (int i = 0; i < thisManyRows; ++i)
   {
      for (int t = 0; t < thisManyCols; ++t)
      {
         cout << mazeBoard[i][t] << " ";
      }
      cout << endl;
   }
}

void Maze::createBoard(string fileName)
{
   ifstream readFile(fileName);
   char symbol;
   for (int i = 0; i < thisManyRows; ++i)
   {
      for (int j = 0; j < thisManyCols; ++j)
      {
         readFile >> symbol;
         mazeBoard[i][j] = symbol;
      }
   }
}

bool Maze::isPath(int row, int col)
{
   bool result = false;
   if (mazeBoard[row][col] == 'E') return true;
   else if (mazeBoard[row][col] == '+' || mazeBoard[row][col] == 'M') return false;
   else mazeBoard[row][col] = 'M';
   if (row - 1 >= 0 && !result) result = isPath(row - 1, col);
   if (col + 1 < thisManyCols && !result ) result = isPath(row, col + 1);
   if (col - 1 >= 0 && !result) result = isPath(row, col - 1);
   if (row + 1 < thisManyRows && !result) result = isPath(row + 1, col);
   return result;
}
#include <iostream>
#include "Maze.h"

using namespace std;
int main()
{
   Maze myMaze;
   int row, col;
   char blank, haveFile;
   string fileName;
   cout << "Do you have a Maze file to import?(y/n): ";
   cin >> haveFile;
   if (haveFile == 'y') cin >> fileName;
   else fileName = "board.txt";
   myMaze.createBoard(fileName);
   myMaze.display();
   cout << "Please enter your starting position, zero indexed(r,c): ";
   cin >> row >> blank >>col;
   cout << "It is " << boolalpha << myMaze.isPath(row,col) <<
   " that you can reach the exit" << endl;
   return 0;
}
bash-3.2$ g++ driver.cpp Maze.cpp 
bash-3.2$ ./a.out
Constructor
Do you have a Maze file to import?(y/n): y
board.txt
This is what the Board looks like
o o + E o 
o + o o + 
+ o + o + 
+ + o o + 
Please enter your starting position, zero indexed(r,c): 1,2
It is true that you can reach the exit
Destructor
bash-3.2$ ./a.out
Constructor
Do you have a Maze file to import?(y/n): n
This is what the Board looks like
o o + E o 
o + o o + 
+ o + o + 
+ + o o + 
Please enter your starting position, zero indexed(r,c): 0,0
It is false that you can reach the exit
Destructor
bash-3.2$ exit
exit

Script done on Mon Nov  7 20:33:44 2016
